#!/usr/bin/python3

import sys
import argparse
import os

descr = 'Print DMCE coverage, hit and total number of instrumentation probes.'

parser = argparse.ArgumentParser(description=descr)
parser.add_argument('profile',    type=str,    help='Available profiles: trace coverage')
parser.add_argument('-f', '--file',   type=str, default = None, help='What config file to update, default: $HOME/.dmceconfig')
parser.add_argument('-d', '--configdir',   type=str, default = None, help='What config folder to update, default: $HOME/.config/dmce')
parser.add_argument('-e', '--exclude',   type=str, default = 'do-not-exclude-anything', help='Comma separated list of files and functions to exclude: <file,:function,file:function >')
parser.add_argument('-i', '--include',   type=str, default = '.*',   help='Comma separated list of files and functions to include: <file,:function,file:function >')
parser.add_argument('-v', '--verbose',  action='store_true',        help='verbose output')
args = parser.parse_args()

if "do-not-exclude-anything" not in args.exclude:
    excludes = args.exclude.split(',')
else:
    excludes = [args.exclude]

if ".*" not in args.include:
    includes = args.include.split(',')
else:
    includes = [args.include]

homeDirectory = os.getenv("HOME")

if args.file is None:
    filename =  homeDirectory + "/.dmceconfig"
else:
    filename = args.file

fcfg = open(filename)
clines = fcfg.readlines()
fcfg.close()

# Modify config file
count = 0
while count < len(clines):

    if not '#' in clines[count]:

        # trace profile
        if args.profile == "trace":
            if "DMCE_NUM_DATA_VARS" in clines[count]:
                clines[count] = "DMCE_NUM_DATA_VARS:5\n"

            if "DMCE_PROBE_SOURCE" in clines[count]:
                clines[count] = "DMCE_PROBE_SOURCE:usr/share/dmce/dmce-probe-trace-atexit-D5-CB.c\n"

            if "DMCE_PROBE_PROLOG" in clines[count]:
                clines[count] = "DMCE_PROBE_PROLOG:dmce-prolog-trace-D5.c\n"


        # coverage profile
        elif args.profile == "coverage":
            if "DMCE_NUM_DATA_VARS" in clines[count]:
                clines[count] = "DMCE_NUM_DATA_VARS:0\n"

            if "DMCE_PROBE_SOURCE" in clines[count]:
                clines[count] = "DMCE_PROBE_SOURCE:/usr/share/dmce/dmce-probe-user-atexit.c\n"

            if "DMCE_PROBE_PROLOG" in clines[count]:
                clines[count] = "DMCE_PROBE_PROLOG:/usr/share/dmce/dmce-prolog-default.c\n"

        else:
            print("Unkown profile (please use trace or coverage), abort")
            sys.exit(1)

# Modify config folder

    count += 1


if args.verbose:
    print("Updated config file: " + filename)
    print("Profile: " + args.profile)
    print("Excluded files and/or functions:")
    print(excludes)
    print("Included files and/or functions:")
    print(includes)

# write back config file
fcfg = open(filename, "w")
for line in clines:
   fcfg.write(line)
fcfg.close()

if args.configdir is None:
    configdir = homeDirectory + "/.config/dmce"
else:
    configdir = args.configdir

# write dmce.exclude file
fexcl = open(configdir + "/dmce.exclude", "w")
for line in excludes:
   fexcl.write(line + "\n")
fexcl.close()

# write dmce.exclude file
fincl = open(configdir + "/dmce.include", "w")
for line in includes:
   fincl.write(line + "\n")
fincl.close()
