#!/usr/bin/env bash

# Copyright (c) 2016 Ericsson AB
#
# Permission is hereby granted, free of charge, to any person obtaining a copy of
# this software and associated documentation files (the "Software"), to deal in
# the Software without restriction, including without limitation the rights to
# use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of
# the Software, and to permit persons to whom the Software is furnished to do so,
# subject to the following conditions:

# The above copyright notice and this permission notice shall be included in all
# copies or substantial portions of the Software.

# THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
# IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS
# FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR
# COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER
# IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN
# CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.

git_root=$PWD
rel_git_root=${PWD##*/}

# TODO: Break out read config stuff from summary and launcher
if [ -e $git_root/.dmceconfig ]; then
	USE_DMCE_CONFIG_FILE=$git_root/.dmceconfig
elif [ -e $HOME/.dmceconfig ]; then
	USE_DMCE_CONFIG_FILE=$HOME/.dmceconfig
else
	echo "Could not find a valid dmce config file. Did you run install?"
	exit 1
fi

echo "DMCE summary. Using config file: $USE_DMCE_CONFIG_FILE"

while read dmceconfig; do
	validconfig=$(echo $dmceconfig | egrep -v \#)
	if [ "$validconfig" != ""  ]; then
		conf_var=$(echo $validconfig | cut -d: -f1)
		conf_val=$(echo $validconfig | cut -d: -f2 | envsubst)
		eval $conf_var=\'$conf_val\'
		export $conf_var
	fi
done < $USE_DMCE_CONFIG_FILE

# Any probes found?
if [ -e $DMCE_WORK_PATH/$rel_git_root/probe-references.log ]; then
	echo "DMCE probe ref log: $DMCE_WORK_PATH/$rel_git_root/probe-references.log "
	echo "Test result log   : $1"
	echo "$DMCE_EXEC_PATH/print_summary.py $1 $DMCE_WORK_PATH/$rel_git_root/probe-references.log"
	$DMCE_EXEC_PATH/print_summary.py $1 $DMCE_WORK_PATH/$rel_git_root/probe-references.log
else
	echo "No DMCE probes found!"
fi
