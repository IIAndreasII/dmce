#!/usr/bin/env bash

cd ${OVE_BASE_DIR}
try_to_identify_repo=0
if [ $# -eq 0 ]; then
	repos="$OVE_REPO_LIST"
	try_to_identify_repo=1
else
	while true; do
		[ "$*" == "" ] && break

		# sanity check
		if ! [ -d "$1" ] || \
			! [ -d "$1/.git" ]; then
			shift
			continue
		fi
		repos+="$(readlink -f $1) "
		shift
	done

fi

if [ "${repos}" == "" ]; then
	echo "error: no git repos found, try again"
	exit 1
fi

git_dir=$(git -C ${BASH_SOURCE[0]%/*} rev-parse --show-toplevel)
git_dir=$(cd ${git_dir}; pwd -P)

# $1: dir
# returns 0 if one or more c/c++ file (based on file extension)
function determine_if_repo_is_dmceable {
	nbr_of_files=$(find $1 -type f -name '*.c' -or -name '*.cpp' | wc -l)
	[ ${nbr_of_files} -gt 0 ] && return 0 || return 1
}

for repo in $repos; do
	# skip DMCE repo
	[ "${repo}" == "${git_dir}" ] && continue

	# skip repos without C or C++ files
	if [ ${try_to_identify_repo} -eq 1 ] && ! determine_if_repo_is_dmceable ${repo}; then
		echo "repo: '${repo}' does not look like a C/C++ repo, skipping"
		continue
	fi

	launch_dmce_repos+="${repo} "
done

if [ "${launch_dmce_repos}" == "" ]; then
	echo "error: no git repos found, try again"
	exit 1
fi

default_n=100
timeout=3
if [ -t 1 ]; then
	echo "number of commits to probe?"
	echo "this dialog will timeout in ${timeout} seconds and use ${default_n} commits."
	while true; do
		read -t ${timeout} -p "#commits: "
		ret=$?
		if [ $ret -gt 128 ]; then
			n=${default_n}
			echo
			break
		elif [ $ret -eq 0 ] && [ "x${REPLY}" = "x" ]; then
			continue
		elif ! [[ "${REPLY}" =~ ^[0-9]+$ ]]; then
			echo "error: just numbers, try again!"
			continue
		else
			n=${REPLY}
			break
		fi
	done
else
	n=${default_n}
fi

dmce_launcher="${OVE_ACTIVE_REPO_DIR:?}/dmce-launcher"
if [ ! -e $dmce_launcher ]; then
	echo "error: can not find DMCE launcher"
	exit 1
fi
dmce_launcher_args="-n ${n} -q"

for repo in ${launch_dmce_repos}; do
	echo "$ cd ${repo}"
	if ! cd ${repo}; then
		echo "error: 'cd ${repo}' failed"
		exit 1
	fi
	echo "$ ${dmce_launcher} -c -q"
	${dmce_launcher} -c -q
	echo "$ ${dmce_launcher} ${dmce_launcher_args}"
	${dmce_launcher} ${dmce_launcher_args}
done
