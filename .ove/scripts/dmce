#!/usr/bin/env bash

if ! cd "${OVE_BASE_DIR:?}"; then
	echo "error: 'cd ${OVE_BASE_DIR}' failed"
	exit 1
fi

dmce_launcher="${OVE_ACTIVE_REPO_DIR:?}/dmce-launcher"
if [ ! -e "$dmce_launcher" ]; then
	echo "error: can not find DMCE launcher"
	exit 1
fi

try_to_identify_repo=0
if [ $# -eq 0 ]; then
	repos="$OVE_REPO_LIST"
	try_to_identify_repo=1
else
	while true; do
		[ "x$*" = "x" ] && break

		# sanity check
		if ! [ -d "$1" ] || \
			! [ -d "$1/.git" ]; then
			shift
			continue
		fi
		repos+="$(readlink -f "$1") "
		shift
	done

fi

if [ "x${repos}" = "x" ]; then
	echo "error: no git repos found, try again"
	exit 1
fi


git_dir=$(git -C "${BASH_SOURCE[0]%/*}" rev-parse --show-toplevel)
if ! git_dir=$(cd "${git_dir}" || exit; pwd -P); then
	echo "error: 'cd ${git_dir}' failed"
	exit 1
fi

# $1: dir
# returns 0 if one or more c/c++ file (based on file extension)
function determine_if_repo_is_dmceable {
	nbr_of_files=$(find "$1" -xdev -type f -name '*.c' -or -name '*.cpp' -or -name '*.cc' 2> /dev/null | wc -l)
	if [ "${nbr_of_files}" -gt 0 ]; then
		return 0
	else
		return 1
	fi
}

_repos=()
for repo in $repos; do
	# skip DMCE repo
	[ "${repo}" == "${git_dir}" ] && continue

	# skip repos without C or C++ files
	if [ ${try_to_identify_repo} -eq 1 ] && ! determine_if_repo_is_dmceable "${repo}"; then
		continue
	fi

	_repos+=("${repo}")
done

if [ "${#_repos[@]}" -eq 0 ]; then
	echo "error: no git repos found, try again"
	exit 1
elif [ "${#_repos[@]}" -ne 1 ]; then
	echo "about to launch DMCE on ${#_repos[@]} repos: $(printf "%s " "${_repos[@]}")" | \
		sed -e "s,$OVE_BASE_DIR/,,g"
fi

default_n=0
timeout=3
if [ -t 1 ]; then
	while true; do
		read -r -t ${timeout} -p "#commits to probe? (0 = entire git history on current branch) "
		ret=$?
		if [ $ret -gt 128 ]; then
			n=${default_n}
			echo
			break
		elif [ $ret -eq 0 ] && [ "x${REPLY}" = "x" ]; then
			continue
		elif ! [[ "${REPLY}" =~ ^[0-9]+$ ]]; then
			echo "error: just numbers, try again!"
			continue
		else
			n=${REPLY}
			break
		fi
	done
else
	n=${default_n}
fi

run() {
	local cmd

	cmd="$*"
	echo "$ $cmd"
	if ! $cmd; then
		echo "error: '$cmd' failed"
		return 1
	fi
}

# set syslog profile
if ! run "${OVE_ACTIVE_REPO_DIR:?}/dmce-set-profile -s -d ${OVE_ACTIVE_REPO_DIR} -p syslog"; then
	exit 1
fi

if [ $n -eq 0 ]; then
	args="-a"
else
	args="-n ${n}"
fi

# run 'dmce-launcher' on all repos
for repo in "${_repos[@]}"; do
	if ! run "cd ${repo}"; then
		exit 1
	elif ! run "${dmce_launcher} -c -q"; then
		continue
	elif ! run "${dmce_launcher} $args -q"; then
		continue
	fi
done
