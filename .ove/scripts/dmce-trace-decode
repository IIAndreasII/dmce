#!/usr/bin/env bash
# SPDX-License-Identifier: MIT
#
# MIT License
#
# Copyright (c) 2021 Ericsson
#
# Permission is hereby granted, free of charge, to any person obtaining a copy
# of this software and associated documentation files (the "Software"), to deal
# in the Software without restriction, including without limitation the rights
# to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
# copies of the Software, and to permit persons to whom the Software is furnished
# to do so, subject to the following conditions:
#
# The above copyright notice and this permission notice (including the next
# paragraph) shall be included in all copies or substantial portions of the
# Software.
#
# THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
# IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS
# FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS
# OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY,
# WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF
# OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.

function usage() {
    local repos

    repos="${OVE_REPO_LIST//${OVE_BASE_DIR}\//}"
    repos="${repos/dmce/}"
    repos="${repos/  / }"
    cat << EOF
NAME
        Decode DMCE trace buffer

SYNOPSIS
        ove dmce trace-decode git

OPTIONS
        git:
          choose one git of: ${repos}

PREREQUISITE
    A successful run of 'ove dmce trace-prepare'

DESCRIPTION
        This OVE plugin will decode one DMCE trace buffer and display the raw trace to the user.
        If 'fzf' (=github.com/junegunn/fzf) is installed an interactive viewer is launched.

        It's possible to force the viewer to 'tgui', 'fzf', 'less', 'stdout', 'stderr' or '<file>'. See EXAMPLES below!

CONFIGURATION
        # select trace viewer tool
        DMCE_TRACE_VIEWER tgui|stdout|stderr|less|fzf|<file>

EXAMPLES
        # decode the trace buffer and launch the interactive viewer tgui
        ove dmce trace-decode ag

        # install fzf
        <package manager> install fzf

        # decode the trace buffer and launch an interactive fzf viewer
        DMCE_TRACE_VIEWER=fzf ove dmce trace-decode ag

        # decode the trace buffer and display the trace on stdout
        DMCE_TRACE_VIEWER=stdout ove dmce trace-decode ag

        # decode the trace buffer and save the trace to a file '/tmp/a.trace'
        DMCE_TRACE_VIEWER=/tmp/a.trace ove dmce trace-decode ag
EOF
    exit 1
}

function init() {
    # usage and sanity checks
    if [ $# -ne 1 ]; then
        usage
    fi

    git="$1"
    git_base="${1##*/}"
    git_full="${OVE_BASE_DIR:?}/$1"
    name="$(basename "$0")-${git/\//_}"

    if [ ! -d "${git_full}" ]; then
        echo "error: ${git_full} is not a directory"
        usage
    elif [ ! -d "${git_full}"/.git ]; then
        echo "error: ${git_full} does not appear to be a git repo"
        usage
    fi

    if ! cd "${git_full}"; then
        echo "error: 'cd ${git_full}' failed, weird!"
        exit 1
    fi
}

function cleanup() {
    echo "Exiting trace"
}

function main() {
    init "$@"

    trap cleanup EXIT

    if [ ! -d /tmp/$OVE_USER/dmce ]; then
        echo "error: no '/tmp/$OVE_USER/dmce' directory"
        exit 1
    fi

    find /tmp/$OVE_USER/dmce -maxdepth 1 -name 'dmcebuffer.bin*' | \
        grep [0-9]$ | \
        LC_ALL=C sort > /tmp/$OVE_USER/dmce/dmce-trace-prepare.post
    if [ ! -s /tmp/$OVE_USER/dmce/dmce-trace-prepare.post ]; then
        echo "error: no dmcebuffer files found"
        exit 1
    fi

    if [ ! -s /tmp/$OVE_USER/dmce/dmce-trace-prepare.pre ]; then
        # no old dmcebuffers found
        b_list="$(cat /tmp/$OVE_USER/dmce/dmce-trace-prepare.post)"
    else
        # here we had some old dmcebuffers laying around, just take the new ones
        if ! b_list="$(comm -1 -3 /tmp/$OVE_USER/dmce/dmce-trace-prepare.pre /tmp/$OVE_USER/dmce/dmce-trace-prepare.post)"; then
            exit 1
        fi
    fi

    for b in $b_list; do
        echo "trace $b:"
        dmce-trace-viewer $b /tmp/$OVE_USER/dmce/${git_base}/probe-references-original.log ${git_full}
    done
}

main "$@"
